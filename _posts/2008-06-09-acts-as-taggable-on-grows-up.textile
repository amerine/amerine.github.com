---
layout: post
title: ActsAsTaggableOn Grows Up
---

Acts As Taggable On ("original post here":http://intridea.com/2007/12/4/announcing-acts_as_taggable_on), the tagging plugin with custom tag contexts, has gathered up some great new features over the past weeks thanks to the efforts of the community as well as "fellow Intrideans Pradeep Elankumaran and Brendan Lim":http://www.intridea.com/people. I just wanted to take this opportunity to go over some of what's new and interesting in the world of <code>acts_as_taggable_on</code>.

h3. Community Fixes

First, "Peter Cooper":http://www.petercooper.co.uk/ was kind enough to submit a patch that allows <code>acts_as_taggable_on</code> to work with Rails 2.1's <code>named_scope</code> when using <code>find_options_for_tag_counts</code>.

Secondly, the much requested support for Single Table Inheritance is finally in! It was just a matter of using a class inheritable attribute instead of a class instance variable, and big thanks to "slainer68":http://www.nicolasblanco.fr/ for hunting that down and taking the time to submit a patch.

If there's anything you've hacked on to Acts As Taggable On, I urge you to submit a patch to the "Lighthouse Project":http://mbleigh.lighthouseapp.com/projects/10116-acts-as-taggable-on. I try to get new patches integrated into the codebase as quickly as possible, so please do submit anything!

During the "Community Code Drive":http://wiki.oreillynet.com/railsconf2008/index.cgi?CommunityProjectCodeDrive at RailsConf two great features were added: taggers and related objects.

h3. Taggers

Tags can now have ownership, allowing for such things as User-tracked tags and more. This was a requested feature and something that I'd been looking forward to myself. Here's the usage:

<pre name="code" class="ruby">class User < ActiveRecord::Base
  acts_as_tagger
end

class Photo < ActiveRecord::Base
  acts_as_taggable_on :locations
end

@some_user.tag(@some_photo, :with => "paris, normandy", :on => :locations)
@some_user.owned_taggings
@some_user.owned_tags
@some_photo.locations_from(@some_user)</pre>

h3. Find Related

Another request (and another great idea) is the ability to find related objects by similar tags. This is now available through the <code>@object.find_related_on_tags</code> syntax:

<pre name="code" class="ruby">@bobby = User.find_by_name("Bobby")
@bobby.skill_list # => ["jogging", "diving"]

@frankie = User.find_by_name("Frankie")
@frankie.skill_list # => ["hacking"]

@tom = User.find_by_name("Tom")
@tom.skill_list # => ["hacking", "jogging", "diving"]

@tom.find_related_on_skills # => [<User name="Bobby">,<User name="Frankie">]
@bobby.find_related_on_skills # => [<User name="Tom">] 
@frankie.find_related_on_skills # => [<User name="Tom">] </pre>

h3. Gemified!

Acts As Taggable On now works as a GemPlugin in Rails. This is a new way (as of Rails 2.1) of distributing plugins as gems and having them still automatically link up and do their magic. To use it as a gem, add it to your <code>config/environment.rb</code> like so:

<pre name="code" class="ruby">config.gem "mbleigh-acts-as-taggable-on", :source => "http://gems.github.com", :lib => "acts-as-taggable-on"</pre>

Now you should be able to get the latest version of the plugin just by running <code>rake gems:install</code>. However, this hasn't been working for me so the alternative is just to install the gem directly:

<pre><code>gem install mbleigh-acts-as-taggable-on --source http://gems.github.com/</pre>

Now when you run your Rails app, even though it's not in vendor/plugins it should be running! To make sure, look for this line on startup:

<pre><code>** acts_as_taggable_on: initialized properly</pre>

There are still a couple of issues outstanding in Rails regarding GemPlugins (if you unpack it, it will not run the initialization properly for some reason), but I wanted to give everyone the latest and greatest way to install the plugin possible. It will still work fine using the conventional methods as well.

h3. Community and Future

I've been really happy with the response and support of the community, and I would like to do everything possible to cultivate future participation. To that end, I have created an "Acts As Community Project":http://www.actsascommunity.com/projects/acts-as-taggable-on for <code>acts_as_taggable_on</code> that will hopefully provide some casual communication about the project. Feel free to post on the wall or in the forums, and look out for additions soon.

Finally, the area of the plugin that still needs some work is tag caching. This is not a particular area of my expertise, so I'm hoping that someone from the community will write up some specs that flesh out the caching functionality in new and interesting ways.

Thanks for all of the patches, and I hope you continue to enjoy using Acts As Taggable On!

**UPDATE (6/10/08):** The improvements keep on rolling! After writing the post, I went off on a tangent and decided to make the plugin work both traditionally and as a gem. See more details above in the "Gemified" section.
